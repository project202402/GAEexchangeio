"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[437],{437:function(e,t,n){n.d(t,{CF:function(){return G},eI:function(){return Z},ZP:function(){return L},UR:function(){return Q},cS:function(){return X},pt:function(){return N}});var o=n(64861),a=n(69521),r=n(47622),i=n(4466),s=n(5790),c=n(27158),d=n(72558),l=n(28879),u=n.n(l),h=n(58540),w=n(88740),f=n(92115),m=n(30031),g=n(85156),A=n(22510),p=n(49073),E=n(52678),y=n(68287),k=n(72744),T=n(3457),S=n(17417),b=n(38571),P=n(48935),R=n(48834).Buffer;function I(e){let t=e.toString(),n=-1===t.indexOf("0x")?t:t.slice(2);for(;n.length<64;)n="00".concat(n);return R.from(n,"hex")}var x=n(88727),v=n(27502),q=n(16067),_=n(37164),C=n(1973),D=n(33618),O=n(50729),H=n(49873),F=n(81772),B=n(48834).Buffer;let U={[H.QX.chainId]:33e4,[H.vT.chainId]:33e4,[H.NM.chainId]:33e4,[H.KX.chainId]:39e4,[H.Vp.chainId]:39e4,[H.cc.chainId]:348e3,[H.u9.chainId]:348e3,[H.PO.chainId]:33e5,[H.lg.chainId]:35e4,[H.tH.chainId]:35e4,[H.Qz.chainId]:3e5,[H.T2.chainId]:33e4};function N(e){return"solana"===e.chainType?p.ru:U[e.chainId]}function M(e){var t,n,o,r;let{baseToken:s,quoteToken:c,quoteData:d,signature:l,crossChainGasFeeEstimate:u}=e;if(!d.dstPool)throw Error("Missing quote data.");let h=(0,v.tG)(s.chain);if(!h.hashflowChainId)throw Error("Unsupported cross-chain network: ".concat(JSON.stringify(s.chain)));let w=(0,v.tG)(c.chain).hashflowChainId;if(!w)throw Error("Unsupported cross-chain network: ".concat(JSON.stringify(c)));let f=(d.baseToken===a.ZERO_ADDRESS?u.plus(d.baseTokenAmount):u).toFixed(),m="0x"===l.slice(0,2)?l:"0x"+l,{nonce:g}=d;if(!g)throw new O.AQ("Nonce should be present for RFQ-T.");let A=null===(n=i.contractAddressesByNetwork.wormholeMessenger)||void 0===n?void 0:null===(t=n[h.name])||void 0===t?void 0:t.address;if(!A)throw new O.AQ("X-Chain Messenger does not exist for chain.");let p="evm"===c.chain.chainType?C.qQ:C.Wt,E={srcChainId:h.hashflowChainId,dstChainId:w,srcExternalAccount:null!==(o=d.externalAccount)&&void 0!==o?o:a.ZERO_ADDRESS,dstExternalAccount:new p(null!==(r=d.dstExternalAccount)&&void 0!==r?r:"evm"===c.chain.chainType?a.ZERO_ADDRESS:H.HH).getFullyPaddedAddressHex(),srcPool:d.pool,dstPool:new p(d.dstPool).getFullyPaddedAddressHex(),dstTrader:new p(d.trader).getFullyPaddedAddressHex(),baseToken:d.baseToken,quoteToken:new p(d.quoteToken).getFullyPaddedAddressHex(),effectiveBaseTokenAmount:d.baseTokenAmount,baseTokenAmount:d.baseTokenAmount,quoteTokenAmount:d.quoteTokenAmount,quoteExpiry:d.quoteExpiry,txid:d.txid,nonce:g,xChainMessenger:A,signature:m};return{quote:E,value:f}}function Z(e){let{baseToken:t,balances:n,allowances:o,contract:a,nativeToken:r,hashflowQuote:i}=e;if(!i.signature)return!1;let s=o.find(e=>(0,q.RZ)(e.token,t)&&e.contract===a);if(!(0,q.RZ)(t,r)&&(!s||"set"!==s.status||s.limit.lt(i.baseAmount)))return!1;let c=n[(0,q.Bf)(t)];return!(!c||c.lt(i.baseAmount))}async function Q(e){let{wallet:t,baseToken:n,quoteToken:o,quoteData:r,signature:i,crossChainGasFeeEstimate:s}=e;(0,g.k)(t.abortSignal);let{quote:c,value:d}=M({baseToken:n,quoteToken:o,quoteData:r,signature:i,crossChainGasFeeEstimate:s});return(0,P.UV)(await t.hashflow.contracts.hRouter.tradeXChainRFQT.estimateGas(c,I(a.ZERO_ADDRESS),"0x",{value:d}))}async function X(e){let{wallet:t,baseToken:n,quoteToken:o,quoteData:r,signature:i,crossChainGasFeeEstimate:s,gasPriceOptions:c}=e;if(t.networkId!==H.lg.chainId)throw Error("Can only estimate op gas on Optimism network.");(0,g.k)(t.abortSignal);let{quote:d,value:l}=M({baseToken:n,quoteToken:o,quoteData:r,signature:i,crossChainGasFeeEstimate:s}),u=(0,P.UV)(await t.hashflow.optimism.estimateOptimismL1GasFee(await t.hashflow.contracts.hRouter.tradeXChainRFQT.populateTransaction(d,I(a.ZERO_ADDRESS),"0x",{value:l,...c}))),h=(0,P.UV)(await t.hashflow.contracts.hRouter.tradeXChainRFQT.estimateGas(d,I(a.ZERO_ADDRESS),"0x",{value:l}));return(0,p.e3)(c,h,u)}let G="execute-cross-network-trade";async function*L(e,t){let{baseToken:n,quoteToken:i,nativeToken:l,crossChainGasFeeEstimate:R,gasEstimate:O,gasFeeEstimate:U,wallet:N,leaseProvider:Z,balances:Q,addTransactionHistoryEntry:X,updateTransactionHistoryEntry:G,showToast:L,gasPriceOptions:K,quote:W,abortSignal:V,usdPrices:Y,refetchBalances:z,getServerDate:J}=e;try{var $,j,ee;let e;e=t||{transactionId:(0,_.x0)(),stage:"source-network-transaction-precommit",wallet:N.address.toString()},yield e;let et="evm"===N.chain.chainType&&V?(0,f.Z)(N.wallet.abortSignal,V):V;if("source-network-transaction-precommit"===e.stage){let t;if((0,g.k)(et),!Q||!l||!W||!K)throw Error("Missing params.");let h=null!==($=Q[(0,q.Bf)(n)])&&void 0!==$?$:P.xE,w=null!==(j=Q[(0,q.Bf)(l)])&&void 0!==j?j:P.xE;if((null==W?void 0:W.type)!=="cross-network-trade")throw Error("Invalid quote.");if(!W.hashflowQuote)throw Error("Missing quote data.");let{quoteDataV3:f,signature:m,baseAmount:E,quoteAmount:y}=W.hashflowQuote;if(!f)throw Error("Quote Data not available.");if(!O)throw Error("Missing gas estimate.");if(!R)throw Error("Missing LZ fee estimate.");if(E.eq(f.baseTokenAmount)){if(!y.eq(f.quoteTokenAmount))throw new k.m_("Transaction Error","There was an error while verifying the quote data: quote token amounts don’t match. Your transaction was not submitted. Please contact Hashflow support.")}else throw new k.m_("Transaction Error","There was an error while verifying the quote data: base token amounts don’t match. Your transaction was not submitted. Please contact Hashflow support.");let S=null!=U?U:(0,p.Ld)(K,new d.Z(O)),x=R.plus(S);if((0,q.RZ)(n,l)){if(w.lt(E.plus(x)))throw new k.B9(l,w,w.plus(x))}else{if(h.lt(E))throw new k.B9(l,h,E);if(w.lt(x))throw new k.B9(l,w,x)}if("evm"===N.chain.chainType){let e=N.wallet,{quote:o,value:r}=M({baseToken:n,quoteToken:i,quoteData:f,signature:m,crossChainGasFeeEstimate:R}),{hash:s}=await e.hashflow.contracts.hRouter.tradeXChainRFQT(o,I(a.ZERO_ADDRESS),"0x",{...K,value:r});t=s}else{let e=N.wallet,a=new o.Y7(e.connection,e.anchorWallet,{}),d=new o.$r(r.HashflowSolanaIDL,r.HASHFLOW_PROGRAM_ADDRESS[N.chain.chainId===H.vq.chainId?"mainnet":"devnet"],a),l=r.WORMHOLE_PROGRAM_ADDRESS[N.chain.chainId===H.vq.chainId?"mainnet":"devnet"],u=r.HASHFLOW_FEE_COLLECTOR_ADDRESS[N.chain.chainId===H.vq.chainId?"mainnet":"devnet"],h=e.anchorWallet.publicKey,w=new Uint8Array(B.from("0x"===f.txid.slice(0,2)?f.txid.slice(2):f.txid,"hex")),[g]=c.nh.findProgramAddressSync([o.P6.bytes.utf8.encode("outbound_x_chain_trade_receipt"),w],d.programId),[A]=c.nh.findProgramAddressSync([o.P6.bytes.utf8.encode("config")],d.programId),[p]=c.nh.findProgramAddressSync([o.P6.bytes.utf8.encode("wormhole_config")],d.programId),[y]=c.nh.findProgramAddressSync([o.P6.bytes.utf8.encode("fee_collector")],new c.nh(l)),[k]=c.nh.findProgramAddressSync([o.P6.bytes.utf8.encode("Bridge")],new c.nh(l)),[S]=c.nh.findProgramAddressSync([o.P6.bytes.utf8.encode("emitter")],d.programId),[P]=c.nh.findProgramAddressSync([o.P6.bytes.utf8.encode("Sequence"),S.toBuffer()],new c.nh(l)),[I]=c.nh.findProgramAddressSync([o.P6.bytes.utf8.encode("wormhole_sent"),w],d.programId),x=f.baseToken,q=await (0,s.Am)(new c.nh(x),h),_=new c.nh(f.pool),O=await (0,s.Am)(new c.nh(x),_,!0),F=new Uint8Array((0,C.Tm)("evm",f.dstPool).getFullyPaddedAddressUint8Array()),U=f.dstExternalAccount?new Uint8Array((0,C.Tm)("evm",f.dstExternalAccount).getFullyPaddedAddressUint8Array()):Uint8Array.from(B.from("0000000000000000000000000000000000000000000000000000000000000000","hex")),M=new Uint8Array((0,C.Tm)("evm",f.quoteToken).getFullyPaddedAddressUint8Array()),Z=new Uint8Array((0,C.Tm)("evm",f.trader).getFullyPaddedAddressUint8Array()),Q=(0,v.$B)(i.chain.chainId).hashflowChainId,[X]=c.nh.findProgramAddressSync([o.P6.bytes.utf8.encode("x_chain_pool_auth"),_.toBuffer(),(0,D.K)(Q,2),F],d.programId),G=new Uint8Array(B.from("0x"===m.slice(0,2)?m.slice(2):m,"hex")),L=G[G.length-1],K=G.slice(0,G.length-1),W=(0,b.SF)(n)?await (0,T.I0)(e.anchorWallet.publicKey,e.connection,E.toNumber(),!0):[],V=o.rV.Lb.setComputeUnitLimit({units:5e5}),Y=await d.methods.tradeXChainAndSend([...w],Q,[...F],[...U],[...M],[...Z],new o.BN(f.baseTokenAmount),[...(0,D.K)(f.quoteTokenAmount,32)],new o.BN(f.quoteExpiry),new o.BN(0),[...K],L,new o.BN(f.baseTokenAmount),new o.BN(R.toString())).accounts({payer:h,trader:h,config:A,pool:_,tokenFromMint:x,tokenFromPoolAccount:O,tokenFromTraderAccount:q,outboundXChainTradeReceipt:g,poolAuthorization:X,hashflowFeeCollector:u,wormholeConfig:p,wormholeProgram:l,wormholeBridge:k,wormholeFeeCollector:y,wormholeEmitter:S,wormholeSequence:P,wormholeMessage:I,clock:"SysvarC1ock11111111111111111111111111111111"}).instruction(),z=[...W,V,Y],J=new o.rV.YW;J.add(...z);let $=await e.anchorWallet.sendTransaction(J,e.connection);t=$}if(!t)throw Error("Unable to get a transaction hash back.");(0,g.k)(et),(0,A.XV)(A.cC.EXCHANGE.SUBMIT_TRADE);let _=X({type:"cross-network-trade",address:N.address.toString(),chain:n.chain,baseToken:(0,F.w8)(n),baseAmount:E.toString(),quoteToken:(0,F.w8)(i),quoteAmount:y.toString(),transactionId:e.transactionId,transactionHash:t,stage:"source-network-transaction-pending",createdAt:u()(J()).unix(),status:"Pending"});e={...e,transactionHash:t,stage:"source-network-transaction-pending",historyEntryId:_,values:{baseToken:n,baseAmount:W.hashflowQuote.baseAmount.toString(),quoteToken:i,quoteAmount:W.hashflowQuote.quoteAmount.toString()}},yield e,(0,g.k)(et)}if("source-network-transaction-pending"===e.stage){(0,g.k)(et);let{transactionHash:t,historyEntryId:o}=e;if(!t)throw Error("transactionHash is required.");if(!o)throw Error("historyEntryId is required.");if(!N)throw Error("Missing params.");let a={status:"Pending"};if("evm"===N.chain.chainType)a=await (0,w.q)(n.chain,t,Z,V);else if("solana"===N.chain.chainType){let e=N.wallet,n=await (0,T.gG)(e.connection,t);a=n?{status:"Success"}:{status:"Error"}}if("Error"===a.status)throw G(o,{status:"Error"}),new k.OE;if("Dropped"===a.status)throw G(o,{status:"Dropped"}),new k.MY;G(o,{stage:"source-network-transaction-complete"}),e={...e,stage:"source-network-transaction-complete"},yield e,(0,g.k)(et)}if("source-network-transaction-complete"===e.stage||"destination-network-transaction-pending"===e.stage){(0,g.k)(et);let{historyEntryId:t,values:o}=e;if(!t)throw Error("historyEntryId is required.");if(!o)throw Error("values is required.");let a=!0;for(;a;){let o=0;try{let{data:o}=await E.Z.get("/client/xchain-transaction-status",{params:{chainId:String(n.chain.chainId),transactionHash:e.transactionHash,chainType:n.chain.chainType}});(0,g.k)(et),"pending"===o.status&&"source-network-transaction-complete"===e.stage?(G(t,{stage:"destination-network-transaction-pending"}),e={...e,stage:"destination-network-transaction-pending"},yield e,(0,g.k)(et)):"success"===o.status&&(a=!1,G(t,{destinationTransactionHash:o.transactionHash,stage:"success",status:"Success"}),e={...e,destinationTransactionHash:o.transactionHash,stage:"success"},yield e,(0,g.k)(et))}catch(e){if((0,y.eE)(e)){if((o+=1)>5)throw e}else throw e}a&&await (0,m.Z)(1e4,et)}L({type:h.KN,title:"Traded ".concat((0,x.Bw)((0,x.UK)(o.baseAmount,o.baseToken.decimals),b.Df)," ").concat(o.baseToken.name," to \n        ").concat((0,x.Bw)((0,x.UK)(o.quoteAmount,o.quoteToken.decimals),b.Df)," ").concat(o.quoteToken.name),subtitle:"".concat((0,v.tG)(o.baseToken.chain).label," → ").concat((0,v.tG)(o.quoteToken.chain).label),status:"success",options:{preventiveTransactionPanelStages:["completed"]}}),z();let r=(null!==(ee=Y[(0,q.Bf)(n)])&&void 0!==ee?ee:0)*(0,x.UK)(o.baseAmount,n.decimals);(0,A.XV)(A.cC.EXCHANGE.CROSS_NETWORK_TRADE_COMPLETE,r),(0,A.XV)(A.cC.EXCHANGE.TRADE_COMPLETE,r),(0,S.E)(S.k.EXCHANGE.CROSS_NETWORK_TRADE_COMPLETE,r)}return e}catch(e){throw(0,y.SC)(e)}}},33618:function(e,t,n){n.d(t,{K:function(){return r}});var o=n(72558),a=n(50729);function r(e,t){if(t<0||t>32)throw new a.AQ("numBytes out of range, should be within [0, 32]");let n=new o.Z(e),r=n.toFixed(),i=[];for(;n.gt(0);){if(i.push(n.mod(256).toNumber()),i.length>t)throw new a.AQ("".concat(r," is larger than 256 ^ ").concat(t));n=n.div(256).decimalPlaces(0,o.Z.ROUND_DOWN)}for(;i.length<t;)i.push(0);return new Uint8Array(i)}}}]);