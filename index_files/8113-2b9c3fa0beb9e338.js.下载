"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8113],{38113:function(t,e,n){n.d(e,{Qc:function(){return N},RP:function(){return B},ZP:function(){return C},aj:function(){return Z},ej:function(){return G},tj:function(){return H},yl:function(){return O}});var a=n(64861),o=n(47622),i=n(65500),r=n(5790),c=n(27158),s=n(89644),l=n.n(s),u=n(72558),d=n(28879),h=n.n(d),w=n(58540),f=n(88740),m=n(92115),T=n(85156),p=n(22510),k=n(49073),A=n(68287),g=n(72744),v=n(52784),E=n(3457),y=n(17417),b=n(38571),q=n(48935),S=n(88727),R=n(16067),x=n(37164),P=n(49873),I=n(81772),_=n(48834).Buffer;let D={[P.QX.chainId]:11e4,[P.vT.chainId]:11e4,[P.NM.chainId]:11e4,[P.KX.chainId]:13e4,[P.Vp.chainId]:13e4,[P.cc.chainId]:116e3,[P.u9.chainId]:116e3,[P.PO.chainId]:11e5,[P.lg.chainId]:11e4,[P.tH.chainId]:11e4,[P.Qz.chainId]:1e5,[P.T2.chainId]:11e4};function B(t){return"solana"===t.chainType?k.ru:D[t.chainId]}function H(t){var e,n;let{quoteData:a,signature:o}=t,r="0x"===o.slice(0,2)?o:"0x"+o;if(!a.nonce)throw Error("RFQ-T quotes should have a nonce.");let c={pool:a.pool,externalAccount:null!==(e=a.externalAccount)&&void 0!==e?e:i.ZERO_ADDRESS,trader:a.trader,effectiveTrader:null!==(n=a.effectiveTrader)&&void 0!==n?n:a.trader,baseToken:a.baseToken,quoteToken:a.quoteToken,effectiveBaseTokenAmount:a.baseTokenAmount,baseTokenAmount:a.baseTokenAmount,quoteTokenAmount:a.quoteTokenAmount,quoteExpiry:a.quoteExpiry,nonce:a.nonce,txid:a.txid,signature:r},s=a.baseToken===i.ZERO_ADDRESS?a.baseTokenAmount:"0";return{quote:c,value:s}}function G(t){let{baseToken:e,balances:n,allowances:a,contract:o,nativeToken:i,hashflowQuote:r,isBarterTrade:c}=t;if(!r.signature&&!c)return!1;let s=a.find(t=>(0,R.RZ)(t.token,e)&&t.contract===o);if(!(0,R.RZ)(e,i)&&(!s||"set"!==s.status||s.limit.lt(r.baseAmount)))return!1;let l=n[(0,R.Bf)(e)];return!(!l||l.lt(r.baseAmount))}async function O(t){let{wallet:e,quoteDataV3:n,signature:a}=t;if((0,T.k)(e.abortSignal),n){let{quote:t,value:o}=H({quoteData:n,signature:a}),i=(0,q.UV)(await e.hashflow.contracts.hRouter.tradeRFQT.estimateGas(t,{value:o}));return i}throw Error("quoteData v2 and v3 both missing.")}async function N(t){let{wallet:e,quoteDataV3:n,signature:a,gasPriceOptions:o}=t;if(e.networkId!==P.lg.chainId)throw Error("Can only estimate op gas on Optimism network.");if((0,T.k)(e.abortSignal),n){let{quote:t,value:i}=H({quoteData:n,signature:a}),r=(0,q.UV)(await e.hashflow.contracts.hRouter.tradeRFQT.estimateGas(t,{value:i})),c=(0,q.UV)(await e.hashflow.optimism.estimateOptimismL1GasFee(await e.hashflow.contracts.hRouter.tradeRFQT.populateTransaction(t,{...o,value:i})));return(0,k.e3)(o,r,c)}throw Error("quoteData v2 and v3 both missing.")}let Z="execute-single-network-trade";async function*C(t){let{baseToken:e,quoteToken:n,nativeToken:s,wrappedNativeToken:d,wallet:D,leaseProvider:B,balances:G,addTransactionHistoryEntry:O,updateTransactionHistoryEntry:N,showToast:Z,gasPriceOptions:C,hashflowQuote:F,abortSignal:V,usdPrices:L,refetchBalances:U,getServerDate:K}=t;try{var M,W,X,j,Q,Y;let t,A;let{quoteData:z,quoteDataV3:$,quoteDataBarter:J,quoteDataJupiter:tt,signature:te,gasEstimate:tn,gasFeeEstimate:ta,baseAmount:to,quoteAmount:ti,expires:tr}=F;if(!z&&!$&&!J&&!tt)throw Error("Quote data not available.");if(!te&&!J&&!tt)throw Error("Missing or invalid quote.");let tc={transactionId:(0,x.x0)(),wallet:D.address.toString(),chain:e.chain,stage:"initial",values:{baseToken:e,baseAmount:to.toString(),quoteToken:n,quoteAmount:ti.toString()},quoteExpiry:z?z.quoteExpiry:J?J.quoteExpiry:$?$.quoteExpiry:tr};yield tc;let ts="solana"===D.chain.chainType?V:(0,m.Z)(D.wallet.abortSignal,V);(0,T.k)(ts);let tl=null!==(M=G[(0,R.Bf)(e)])&&void 0!==M?M:q.xE,tu=null!==(W=G[(0,R.Bf)(s)])&&void 0!==W?W:q.xE;if(z){if("evm"===D.chain.chainType){let e=D.wallet;if(z.eoa){let n=z.quoteToken===i.ZERO_ADDRESS?d.address:z.quoteToken,a=e.hashflow.token.getToken(n.toString());t=(0,q.UV)(await a.balanceOf(z.eoa))}else{let n=e.hashflow.pool.getPool(z.pool);t=(0,q.UV)(await n.getReserves(z.quoteToken))}}}else if($){if($.externalAccount&&$.externalAccount!==i.ZERO_ADDRESS){let e=$.quoteToken===i.ZERO_ADDRESS?d.address:$.quoteToken;if("evm"===D.chain.chainType){let n=D.wallet,a=n.hashflow.token.getToken(e.toString());t=(0,q.UV)(await a.balanceOf($.externalAccount))}else{let n=D.wallet,a=await n.connection.getParsedTokenAccountsByOwner(new c.nh($.externalAccount),{mint:new c.nh(e.toString())}),o=null===(X=a.value[0])||void 0===X?void 0:X.account.data.parsed.info.tokenAmount.amount;t=new u.Z(o)}}else if("evm"===D.chain.chainType){let e=D.wallet,n=e.hashflow.pool.getPool($.pool);t=(0,q.UV)(await n.getReserves($.quoteToken))}else{let e=D.wallet,n=await e.connection.getParsedTokenAccountsByOwner(new c.nh($.pool),{mint:new c.nh($.quoteToken)}),a=null===(j=n.value[0])||void 0===j?void 0:j.account.data.parsed.info.tokenAmount.amount;t=new u.Z(a)}}if((0,T.k)(ts),t&&t.isLessThan(ti))throw new g.ZD(n,ti,t);if(z){if(to.eq(z.baseTokenAmount)){if(!ti.eq(z.quoteTokenAmount))throw new g.m_("Transaction Error","There was an error while verifying the quote data: quote token amounts don’t match. Your transaction was not submitted. Please contact Hashflow support.")}else throw new g.m_("Transaction Error","There was an error while verifying the quote data: base token amounts don’t match. Your transaction was not submitted. Please contact Hashflow support.")}if($){if(to.eq($.baseTokenAmount)){if(!ti.eq($.quoteTokenAmount))throw new g.m_("Transaction Error","There was an error while verifying the quote data: quote token amounts don’t match. Your transaction was not submitted. Please contact Hashflow support.")}else throw new g.m_("Transaction Error","There was an error while verifying the quote data: base token amounts don’t match. Your transaction was not submitted. Please contact Hashflow support.")}let td=null!=ta?ta:(0,k.Ld)(C,new u.Z(tn));if((0,R.RZ)(e,s)){if(tu.lt(to))throw new g.B9(s,tu,tu.plus(td));if(tu.lt(to.plus(td)))throw new g.gr(s,tu.minus(to),td)}else{if(tl.lt(to))throw new g.B9(s,tl,to);if(tu.lt(td))throw new g.gr(s,tu,td)}if($){if("evm"===D.chain.chainType){let{quote:t,value:e}=H({quoteData:$,signature:te}),n=D.wallet,a=await n.hashflow.contracts.hRouter.tradeRFQT(t,{value:e,...C});A=a.hash}else{let t=D.wallet,i=new a.Y7(t.connection,t.anchorWallet,{}),s=new a.$r(o.HashflowSolanaIDL,o.HASHFLOW_PROGRAM_ADDRESS[D.chain.chainId===P.vq.chainId?"mainnet":"devnet"],i),l=t.anchorWallet.publicKey,u=$.baseToken,d=$.quoteToken,h=await (0,r.Am)(new c.nh(u),l),w=await (0,r.Am)(new c.nh(d),l),f=new c.nh($.pool),m=$.dstPool?await (0,r.Am)(new c.nh(u),new c.nh($.dstPool),!0):await (0,r.Am)(new c.nh(u),f,!0),T=$.externalAccount?await (0,r.Am)(new c.nh(d),new c.nh($.externalAccount),!0):await (0,r.Am)(new c.nh(d),f,!0),p=new Uint8Array(_.from("0x"===te.slice(0,2)?te.slice(2):te,"hex")),k=p[p.length-1],g=p.slice(0,p.length-1),v=new Uint8Array(_.from("0x"===$.txid.slice(0,2)?$.txid.slice(2):$.txid,"hex")),[y]=c.nh.findProgramAddressSync([a.P6.bytes.utf8.encode("trade_receipt"),v],s.programId),q=(0,b.SF)(e)?await (0,E.I0)(t.anchorWallet.publicKey,t.connection,to.toNumber(),!0):[],S=await (0,E.Gm)(new c.nh(d),l,t.connection,l),R=(0,b.SF)(e)||(0,b.x)(e)?void 0:await (0,E.fz)(new c.nh(u),l,to.toNumber(),t.connection),x=(0,b.SF)(n)?await (0,E.sm)(t.anchorWallet.publicKey,t.connection,0,w):(0,b.SF)(e)?await (0,E.sm)(t.anchorWallet.publicKey,t.connection,0,h):[],I=await s.methods.trade([...v],new a.BN($.baseTokenAmount),new a.BN($.quoteTokenAmount),new a.BN($.quoteExpiry),[...g],k,new a.BN(0),new a.BN($.baseTokenAmount)).accounts({payer:l,trader:$.trader,tokenFromMint:u,tokenToMint:d,pool:$.pool,tradeReceipt:y,tokenFromTraderAccount:h,tokenFromPoolAccount:m,tokenToTraderAccount:w,tokenToPoolAccount:T}).instruction(),B=S?q.concat([S,I]):q.concat([I]);R&&B.push(R);let H=new c.YW().add(...B);x.length>0&&H.add(...x);let G=await t.anchorWallet.sendTransaction(H,t.connection);A=G}}else if(J){if("evm"===D.chain.chainType){let t=D.wallet,e=await t.provider.request({method:"eth_sendTransaction",params:[{from:null===(Q=D.address)||void 0===Q?void 0:Q.toString(),to:J.contractAddress,value:J.value,data:J.data,gasLimit:J.gasLimit.toString()}]});A=e}}else if(tt&&"solana"===D.chain.chainType){let t=D.wallet,e=t.anchorWallet.publicKey,n=new c.nh("ExactIn"===tt.swapMode?tt.outputMint:tt.inputMint),[a]=await c.nh.findProgramAddressSync([_.from("referral_ata"),new c.nh(v.D).toBuffer(),n.toBuffer()],new c.nh(v.pL)),o=await l().post("https://quote-api.jup.ag/v6/swap",{quoteResponse:tt,userPublicKey:e.toString(),wrapAndUnwrapSol:!0,feeAccount:a}),i=o.data.swapTransaction,r=_.from(i,"base64"),s=c.GS.deserialize(r),u=await t.anchorWallet.sendTransaction(s,t.connection);A=u}if(!A)throw new g.m_("Transaction Error","There was an error generating a transaction hash.");(0,T.k)(ts),(0,p.XV)(p.cC.EXCHANGE.SUBMIT_TRADE);let th=O({type:"single-network-trade",chain:e.chain,address:D.address.toString(),baseToken:(0,I.w8)(e),baseAmount:to.toString(),quoteToken:(0,I.w8)(n),quoteAmount:ti.toString(),transactionHash:A,createdAt:h()(K()).unix(),status:"Pending",transactionId:tc.transactionId});tc={...tc,transactionHash:A,historyEntryId:th,stage:"submitted"},yield tc,(0,T.k)(ts);let tw={status:"Pending"};if("evm"===D.chain.chainType)tw=await (0,f.q)(e.chain,A,B,V);else if("solana"===D.chain.chainType){let t=D.wallet,e=await (0,E.gG)(t.connection,A);tw=e?{status:"Success"}:{status:"Error"}}N(th,{status:tw.status}),(0,f._)({status:tw.status,toastTitle:"Trading ".concat((0,S.Bw)((0,S.UK)(to,e.decimals),b.Df)," ").concat(e.name," to\n        ").concat((0,S.Bw)((0,S.UK)(ti,n.decimals),b.Df)," ").concat(n.name," failed"),showToast:Z}),Z({type:w.KN,title:"Traded ".concat((0,S.Bw)((0,S.UK)(to,e.decimals),b.Df)," ").concat(e.name," to \n        ").concat((0,S.Bw)((0,S.UK)(ti,n.decimals),b.Df)," ").concat(n.name),status:"success",options:{preventiveTransactionPanelStages:["completed"]}}),U();let tf=(null!==(Y=L[(0,R.Bf)(e)])&&void 0!==Y?Y:0)*(0,S.UK)({baseToken:e,baseAmount:to,quoteToken:n,quoteAmount:ti}.baseAmount,e.decimals);return(0,p.XV)(p.cC.EXCHANGE.SINGLE_NETWORK_TRADE_COMPLETE,tf),(0,y.E)(y.k.EXCHANGE.SINGLE_NETWORK_TRADE_COMPLETE,tf),(0,p.XV)(p.cC.EXCHANGE.TRADE_COMPLETE,tf),{...tc,stage:"confirmed"}}catch(t){throw(0,A.SC)(t)}}},52784:function(t,e,n){n.d(e,{D:function(){return o},b6:function(){return i},pL:function(){return a}});let a="REFER4ZgmyYx9c6He5XfaTMiGfdLwRnkV4RPp9t9iF3",o="CjgZ4ocHGkZ1xCNvCHy37Z4VAsHTtVGBjmPnamxmVh5q",i=4},3457:function(t,e,n){n.d(e,{Gm:function(){return h},I0:function(){return f},fz:function(){return w},gG:function(){return d},sm:function(){return m}});var a=n(5790),o=n(28423),i=n(50192),r=n(30020),c=n(48826),s=n(27158),l=n(49873),u=n(23716);async function d(t,e){let n=await t.getLatestBlockhash();try{await t.confirmTransaction({blockhash:n.blockhash,lastValidBlockHeight:n.lastValidBlockHeight,signature:e})}catch(t){return u.error("Failed to confirm solana transaction: ",t),!1}return!0}async function h(t,e,n,i){let r=await (0,a.Am)(t,e,!1),c=await n.getParsedAccountInfo(r);if(!c.value)return(0,o.ji)(i,r,e,t)}async function w(t,e,n,o){var r;let c=await o.getParsedTokenAccountsByOwner(e,{mint:t}),s=null===(r=c.value[0])||void 0===r?void 0:r.account.data.parsed.info.tokenAmount.amount,l=s?parseInt(s):void 0;if(l&&l-n==0){let n=await (0,a.Am)(t,e,!1);return(0,i.Zu)(n,e,e)}}async function f(t,e,n,i,l){let u=[],d=null!=l?l:await (0,a.Am)(r.Gd,t);if(i){var h;let n=await e.getParsedAccountInfo(d);(null==n?void 0:null===(h=n.value)||void 0===h?void 0:h.data)||u.push((0,o.ji)(t,d,t,r.Gd,r.H_,r._u))}else u.push((0,o.ji)(t,d,t,r.Gd,r.H_,r._u));return u.concat([s.yc.transfer({fromPubkey:t,toPubkey:d,lamports:n}),(0,c.D2)(d)])}async function m(t,e,n,a){var o,r;let c=await e.getParsedTokenAccountsByOwner(t,{mint:new s.nh(l.E4)}),u=null===(o=c.value[0])||void 0===o?void 0:o.account.data.parsed.info.tokenAmount.amount,d=u?parseInt(null===(r=c.value[0])||void 0===r?void 0:r.account.data.parsed.info.tokenAmount.amount):0,h=[(0,i.Zu)(a,t,t)];if(!(d-n>0))return h;{let o=await f(t,e,d-n,!1,a);return h.concat(o)}}}}]);